/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import entity.Biblioteca;
import entity.Libro;
import entity.Prestito;
import entity.Utente;
import java.time.LocalDateTime;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Classe che modella l'interfaccia relativa alla registrazione del Prestito
 * @author donatotanieli
 */
public class RegistraPrestitoGUI extends javax.swing.JFrame {
    
    private JFrame f;
    private Biblioteca biblioteca;
    List<Libro> listaL = null;
    List<Utente> listaU = null;
    /**
     * Creates new form RegistraPrestitoGUI
     */
    
    //COSTRUTTORE
    public RegistraPrestitoGUI(JFrame f) {
        initComponents();
        this.f = f;
        //Ottengo il riferimento della biblioteca
        biblioteca = ((BibliotecaGUI)f).getBiblioteca();
        listaL = biblioteca.getListaLibri();
        listaU = biblioteca.getListaUtenti();
        aggiornaTabelle();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        libroComboBox = new javax.swing.JComboBox<>();
        libroText = new javax.swing.JTextField();
        btnCercaLibri = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabellaLibri = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabellaUtenti = new javax.swing.JTable();
        userText = new javax.swing.JTextField();
        btnCercaUtente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        userComboBox = new javax.swing.JComboBox<>();
        btnRegistra = new javax.swing.JButton();
        btnAnnulla = new javax.swing.JButton();
        aggiorna = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 51));
        jLabel1.setText("REGISTRA PRESTITO");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Libri", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 255));
        jLabel3.setText("Cerca libro per:");

        libroComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Titolo", "Autore", "Isbn" }));

        libroText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        btnCercaLibri.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        btnCercaLibri.setForeground(new java.awt.Color(0, 51, 255));
        btnCercaLibri.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Search-icon.png"))); // NOI18N
        btnCercaLibri.setText("Cerca");
        btnCercaLibri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercaLibriActionPerformed(evt);
            }
        });

        tabellaLibri.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        tabellaLibri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titolo", "Autore", "Ibsn", "N. Copie disponibili"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabellaLibri);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(libroComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(libroText, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(btnCercaLibri, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(libroComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(libroText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCercaLibri))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Utenti", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N

        tabellaUtenti.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        tabellaUtenti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Cognome", "Data Di Nascita"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabellaUtenti);

        userText.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        btnCercaUtente.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        btnCercaUtente.setForeground(new java.awt.Color(0, 51, 255));
        btnCercaUtente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Search-icon.png"))); // NOI18N
        btnCercaUtente.setText("Cerca");
        btnCercaUtente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercaUtenteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 255));
        jLabel2.setText("Cerca utente per:");

        userComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Cognome", "Data" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(userComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCercaUtente, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(userComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCercaUtente))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnRegistra.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnRegistra.setForeground(new java.awt.Color(0, 51, 255));
        btnRegistra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ok-icon.png"))); // NOI18N
        btnRegistra.setText("Registra");
        btnRegistra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistraActionPerformed(evt);
            }
        });

        btnAnnulla.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnAnnulla.setForeground(new java.awt.Color(0, 51, 204));
        btnAnnulla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnAnnulla.setText("Annulla");
        btnAnnulla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnnullaActionPerformed(evt);
            }
        });

        aggiorna.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh.png"))); // NOI18N
        aggiorna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggiornaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(btnRegistra)
                        .addGap(259, 259, 259)
                        .addComponent(btnAnnulla))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(360, 360, 360)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aggiorna))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(aggiorna)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistra)
                    .addComponent(btnAnnulla))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo che consente di aggiornare le tabelle dell'interfaccia Biblioteca
     */
    private void aggiornaTabelle(){
        DefaultTableModel modelTabUtenti = (DefaultTableModel) tabellaUtenti.getModel();
        DefaultTableModel modelTabLibri = (DefaultTableModel) tabellaLibri.getModel();
        biblioteca.getListaUtenti().forEach(u->modelTabUtenti.addRow(new Object[]{u.getId(), u.getNome(), u.getCognome(), u.getData()}));
        biblioteca.getListaLibri().forEach(l->modelTabLibri.addRow(new Object[]{l.getTitolo(),l.getAutore(), l.getIbsn(), l.getNum_copie()}));
    }
     
    /**
     * ActionPerformed del Button Cerca della sezione dei libri
     * @param evt 
     */
    private void btnCercaLibriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercaLibriActionPerformed
        //Verifico se la TextField della ricerca libri non è vuota
        if(!libroText.getText().isEmpty()){
            
            String cercaPer = libroComboBox.getSelectedItem().toString();
            switch(cercaPer){
                
                case "Titolo":
                    listaL = biblioteca.cercaLibri(l->l.getTitolo().toLowerCase().contains(libroText.getText().toLowerCase()));
                    break;
                    
                case "Autore":
                    listaL = biblioteca.cercaLibri(l->l.getAutore().toLowerCase().contains(libroText.getText().toLowerCase()));
                    break;
                    
                case "Ibsn":
                    listaL = biblioteca.cercaLibri(l->l.getIbsn().toLowerCase().contains(libroText.getText().toLowerCase()));
                    break;
            }
            if(listaL == null || listaL.isEmpty()){
                JOptionPane.showMessageDialog(null, "La ricerca non ha prodotto risultati!", "MESSAGGIO", JOptionPane.INFORMATION_MESSAGE);
            }else{
                aggiornaTabellaLibri();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Perfavore, inserisci qualcosa!", "ATTENZIONE", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCercaLibriActionPerformed

    /**
     * ActionPerformed del Button Cerca della sezione dell'utente
     * @param evt 
     */
    private void btnCercaUtenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercaUtenteActionPerformed
        //Verifico se la TextField della ricerca utenti non è vuota
        if(!userText.getText().isEmpty()){
            
            String cercaPer = userComboBox.getSelectedItem().toString();
            DefaultTableModel dtm = (DefaultTableModel) tabellaUtenti.getModel();
            dtm.setRowCount(0);
            switch(cercaPer){
                
                case "Nome":
                    listaU = biblioteca.cercaUtenti(u->u.getNome().toLowerCase().contains(userText.getText().toLowerCase()));
                    break;
                    
                case "Cognome":
                    listaU = biblioteca.cercaUtenti(u->u.getCognome().toLowerCase().contains(userText.getText().toLowerCase()));
                    break;
                    
                case "Data":
                    listaU = biblioteca.cercaUtenti(u->u.getData().toString().toLowerCase().contains(userText.getText().toLowerCase()));
                    break;
                    
            }
            
            if(listaU == null || listaU.isEmpty()){
                JOptionPane.showMessageDialog(null, "La ricerca non ha prodotto risultati!", "MESSAGGIO", JOptionPane.INFORMATION_MESSAGE);
            }else{
                listaU.forEach(u->dtm.addRow(new Object[]{u.getId(), u.getNome(), u.getCognome(), u.getData()}));
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Perfavore, inserisci qualcosa!", "ATTENZIONE", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCercaUtenteActionPerformed

    /**
     * ActionPerformed del Button Registra
     * @param evt 
     */
    private void btnRegistraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistraActionPerformed
        int rigaUtente = tabellaUtenti.getSelectedRow();
        int rigaLibro = tabellaLibri.getSelectedRow();
        if(rigaLibro != -1 && rigaUtente != -1){
            Utente u = biblioteca.getUtenteDaId(Integer.parseInt(tabellaUtenti.getValueAt(rigaUtente, 0).toString()));//Ottengo il riferimento dell'utente della lista degli utenti in biblioteca
            Libro l = biblioteca.getLibroDaIbsn(tabellaLibri.getValueAt(rigaLibro, 2).toString());//Ottengo il riferimento del libro della lista dei libri in biblioteca
            //Controllo se il libro selezionato risulta disponibile
            if(l.getNum_copie() != 0){
                Prestito prestito = new Prestito();
                prestito.setLibro(l);
                prestito.setUtente(u);
                prestito.setInizioPrestito(LocalDateTime.now());
                l.diminuisciCopie();
                aggiornaTabellaLibri();
                biblioteca.getListaPrestiti().add(prestito);
                JOptionPane.showMessageDialog(null, "Prestito registrato correttamente!", "REGISTRAZIONE", JOptionPane.INFORMATION_MESSAGE);
                
                ((BibliotecaGUI)f).aggiornaTabella(2);
            }else{
                JOptionPane.showMessageDialog(null, "Il libro selezionato non è disponibile!", "ATTENZIONE", JOptionPane.ERROR_MESSAGE);
            }
              
        }else{
            JOptionPane.showMessageDialog(null, "Perfavore, devi selezionare sia un utente, sia un libro!", "ATTENZIONE", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnRegistraActionPerformed

    /**
     * ActionPerformed del Button Annulla
     * @param evt 
     */
    private void btnAnnullaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnnullaActionPerformed
        dispose();
    }//GEN-LAST:event_btnAnnullaActionPerformed

    /**
     * ActionPerformed del tasto Aggiorna. Serve a resettare le due tabelle per effettuare una nuova ricerca
     * @param evt 
     */
    private void aggiornaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggiornaActionPerformed
        ((DefaultTableModel) tabellaLibri.getModel()).setRowCount(0);
        ((DefaultTableModel) tabellaUtenti.getModel()).setRowCount(0);
        aggiornaTabelle();
    }//GEN-LAST:event_aggiornaActionPerformed

    /**
     * Metodo che consente di aggiornare la tabella dei libri dell'interfaccia Biblioteca
     */
    private void aggiornaTabellaLibri(){
        DefaultTableModel dtm = (DefaultTableModel) tabellaLibri.getModel();
        dtm.setRowCount(0);
        listaL.forEach(l->dtm.addRow(new Object[]{l.getTitolo(), l.getAutore(), l.getIbsn(), l.getNum_copie()}));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aggiorna;
    private javax.swing.JButton btnAnnulla;
    private javax.swing.JButton btnCercaLibri;
    private javax.swing.JButton btnCercaUtente;
    private javax.swing.JButton btnRegistra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> libroComboBox;
    private javax.swing.JTextField libroText;
    private javax.swing.JTable tabellaLibri;
    private javax.swing.JTable tabellaUtenti;
    private javax.swing.JComboBox<String> userComboBox;
    private javax.swing.JTextField userText;
    // End of variables declaration//GEN-END:variables
}
